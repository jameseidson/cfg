
#GENERAL SETTINGS

#set prefix to Ctrl-a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

#set terminal
set -g default-terminal 'tmux-256color'
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

#use vi keys
set -gw mode-keys vi

#enable native Mac OS X copy/paste
#set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

#update window title
set -g set-titles on
set -g set-titles-string '#T - #I:#W'

#set position to top
set-option -g status-position top

#mouse support
set -g mouse on

#show activity in background windows
set -g monitor-activity on

#allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

#0 is too far from `
set -g base-index 1

#address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

#increase scrollback buffer size set -g history-limit 50000

#dont detach after quitting session
set-option -g detach-on-destroy off

#tmux messages are displayed for 4 seconds
set -g display-time 4000

#refresh 'status-left' and 'status-right' more often
set -g status-interval 5

#focus events enabled for terminals that support them
set -g focus-events on

# uper useful when using "grouped sessions" and multi-monitor setup
set -g aggressive-resize on

#BINDS

#split windows using p and -
unbind '"'
unbind '%'
bind -n 'C-\' split-window -h -c '#{pane_current_path}'
bind -n 'C-p' split-window -v -c '#{pane_current_path}'

#window management
set-option -g renumber-windows on
unbind 'n'
unbind 'c'
unbind 'j'
unbind 'l'
bind-key -n C-n new-window -c '#{pane_current_path}'
bind l next-window
bind h previous-window

#move windows around with arrow keys
bind Up swap-window -t +1 \; next-window
bind Down swap-window -t -1 \; previous-window

#session management
unbind d
unbind ']'
unbind '['
bind ] switch-client -n
bind [ switch-client -p
bind n new-session
bind q kill-session

#pane management
unbind '!'

bind-key -n C-w kill-pane
bind-key -n C-o break-pane

bind Right swap-pane -U
bind Left swap-pane -D

#pane Resize
bind-key -n C-Down resize-pane -D 2 #Resizes the current pane down
bind-key -n C-Up resize-pane -U 2 #Resizes the current pane up
bind-key -n C-Left resize-pane -L 2 #Resizes the current pane left
bind-key -n C-Right resize-pane -R 2 #Resizes the current pane right

#view panes
unbind w
unbind Enter
bind Enter choose-tree -s

#smart pane switching with awareness of Vim splits.
#see: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R

#copy mode
unbind p
unbind c
bind v copy-mode
bind p paste-buffer

#VISUAL SETTINGS

set -g status-fg colour137
set -g status-style dim
set -g status-left ''
set -g status-right '#[fg=colour255,bold] %m/%d #[fg=colour255,bold] %I:%M %p '
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-style fg=colour2
setw -g window-status-current-style bg=colour0
setw -g window-status-current-style bold
setw -g window-status-current-format ' #I#[fg=colour15]:#[fg=colour15]#W#[fg=colour2]#F '

setw -g window-status-style fg=colour3
setw -g window-status-style bg=colour0
setw -g window-status-style none
setw -g window-status-format ' #I#[fg=colour0]:#[fg=colour15]#W#[fg=colour15]#F '

setw -g window-status-bell-style bold
setw -g window-status-bell-style fg=colour15
setw -g window-status-bell-style bg=colour1
